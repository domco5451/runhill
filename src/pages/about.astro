---
import BaseLayout from "../layouts/BaseLayout.astro";
const pageTitle = "About Me";

const identity = {
  firstname: "Dominik",
  country: "Slovakia",
  occupation: "Programator",
  hobbies: ["programming", "anime"],
};

const skills = ["HTML", "CSS", "JS", "React", "Astro", "Writing Docs"];

const happy = true;
const finished = true;
const goal = 3;

const skillStyle = {
  skillColor: "navy",
  fontWeight: "bold",
  textCase: "upperCase",
  purple: "purple",
  h1Size: "4rem",
};
---

<BaseLayout pageTitle={pageTitle}>
  <h2>What do I mean by that?</h2>
  <p>My name is {identity.firstname} and I am from {identity.country}.</p>
  <p>
    I`m trying out this new framework, that is based on MPA principle, instead
    of SPA so wish me luck!
  </p>
  {
    identity.hobbies.length >= 3 ? (
      <p>
        I have a bunch of hobbies, but I am just gonna name 3:{" "}
        {identity.hobbies[0]}, {identity.hobbies[1]}, {identity.hobbies[2]}
      </p>
    ) : (
      <p>
        I have exactly 2 hobbies: {identity.hobbies[0]}, {identity.hobbies[1]}.
      </p>
    )
  }
  <p>My hobbies are:</p>
  <ul>
    {skills.map((skill) => <li class="skill">{skill}</li>)}
  </ul>
  {happy && <p>I am happy to be learning Astro!</p>}
  {finished && <p>I have finished this tutorial!</p>}
  {
    goal === 3 ? (
      <p>My goal is to finish this tutorial in 3 days!</p>
    ) : (
      <p>My goal is to take my time with this tutorial!</p>
    )
  }

  <style define:vars={{ ...skillStyle }}>
    h1 {
      color: var(--purple);
      font-size: var(--h1Size);
    }
    .skill {
      color: var(--skillColor);
      font-weight: var(--fontWeight);
      text-transform: var(--textCase);
    }
  </style>
</BaseLayout>
